#!/bin/bash
##############################
# Telegram 去广告正则生成脚本 https://github.com/AzurLab/Tg-Ad-RegEx
# 一键命令 wget https://raw.githubusercontent.com/AzurLab/Tg-Ad-RegEx/main/adregex -O adregex && chmod +x adregex && ./adregex
# 当前适配無名 v2 机器人 @WuMingv2Bot (我们永远怀念鲁小迅)
##############################
# 规则备忘录
# 1.机器人推广链接:
# /add@WuMingv2Bot (?i:bot\?start)===推广链接，警告1次，3次封禁&&小虎鲨不喜欢你发的链接，警告1次，3次封禁&&adm=ban=300&&adm=warn=1&&del=x=0、y=15
##############################
# 可自定义关键词
# ${b_keyword1} ${b_keyword2} ${b_keyword2p} ${s_keyword} ${file_suffix} ${nickname}
##############################
# 双关键词规则 两个关键词同时出现生效

# 双关键词1 以广告产品名为主

b_keyword1="业务|服务器|cdn|阿里云|腾讯云|高防|vps|独服|杜甫|平台|搭建|定制|\
推广|引流|拉[人群裙]|[群裙]发|[吸增加]粉|关注|点赞|评论|水军|活跃|(wz|僵尸)粉|\
(批量小|非小|[买卖]|微信|QQ|支付宝|钉钉|公众|陌陌|探探|红[书薯]|抖音|soul|灵魂)号|企业微信|电[商销]|\
股民|小群|博彩|菠菜|亚博|棋牌|bc|狗推|人事|兼职|招([人聘募]|代理)|\
暗网|数据|[黑灰]产|件套|(黑|银行|信用)卡|\
对公|[账公个私]户|代[收付发]|洗[钱米]|漂白|资金|转账|usdt|[回收出]u|套现|换汇|贷款|网贷|送货|跑分|\
赚钱|卡[商王]|查[询人车房户档]|定位|监听|人[鬼轨]|开房|社工|(苹果|iOS|企业)签名|火种|蓝标|注册|\
莆田|手表|高仿|[一1][比对][一1]|水鬼|\
租房|房源|\
[一二三]手"

# 双关键词2 以对广告的修饰为主

b_keyword2="电报|tg|telegram|出(?![现来去了门汗生太发口声戏版油道声处国场品])|售|卖|收|\
详[情询]|面交|需要|咨询|合作|[点加看找]我|点头像|dd|滴滴|联系|\
私|[v薇]信|[加\+][vq薇]|\
真[人实]|实名|认证|筛选|解封|担保|专[业供]|精准|实力|高端|正规|\
供应|大量|批发|[现有][货🔥]|货源|直出|安排|\
共济会|军火|假钞|偷渡|暗杀|走私|毒品|\
(?<![这那])个人|团队|工作室|\
[卡咔]接|[无免]押|押金|点位|[0-9]点|高价|免费(测试|试用)|出水|全球|每日更新|\
全新|原装|[一二三]手"

# 双关键词2plus 单独出现时，误杀可能性较大，为了昵称规则的引用性，单独列出

b_keyword2p="菲"

# 独立规则 独立生效

s_keyword="^(dd|滴滴|签到)\$|小哥哥.*在(不在|吗)|需要.*联系|[v薇]信|^加v|水路.*往返"

# 文件后缀

file_suffix="exe|cmd|com|bat|scr|cpl|vbs|cab|lzh|uue|(7|b|x)?z[0-9]?"

# 文件名 删除文件 UC震惊部自叹不如

file_name="菲律宾|柬埔寨|金边|缅甸|诈骗|\
免 *费|下 *载|跳 *转|点 *击|打 *开|观 *看|片 *源|流畅|精 *品|视 *频|进 *群|\
土 *豪|啪|无 *套|内 *射|肛 *交|灌 *肠|鲍 *鱼|尤 *物|骚|嫩|母 *狗|SM|sm|\
[幼呦] *童|母 *子|人 *兽|学 *生|\
监控|记录|拍下|全过?程|经过|详情|警方|开枪|击毙|案件|\
残忍|虐待|血腥|曝光|流出|\
男子|身份|身亡|死者"

# 昵称规则 不会有正常人名字里面有这些吧

nickname="^(在?菲)|^(1+|小?仙女)\$|\
头像|资料|精准|\
全球|正规|水路|往返|特区|\
共富|国际|娱乐|开户|车队|哈希|\
免费|翻墙|梯子|中文|电报|tg|telegram"

##############################
# 以下是脚本
##############################

# 输出规则
text_rule_print(){
    echo "/add@WuMingv2Bot (?i:(${b_keyword1}).*(${b_keyword2}|${b_keyword2p})|(${b_keyword2}|${b_keyword2p}).*(${b_keyword1})|(${s_keyword}))===\
疑似广告，已删除，如误删请联系 @Durovs_Legacy。&&小虎鲨疯了&&小虎鲨不喜欢你&&已击毙广告&&发广告的还能说话吗&&del=x=0、y=15"
}

file_suffix_print(){
    echo "/add@WuMingv2Bot ftype=(?i:${file_suffix})===可疑文件类型，警告1次，3次封禁&&小虎鲨觉得你的文件很可疑，警告1次，3次封禁&&adm=ban=300&&adm=warn=1&&del=x=0、y=15"
}

file_rule_print(){
    echo "/add@WuMingv2Bot fname=(?i:${file_name}|\.(${file_suffix})\$)===可疑文件，警告1次，3次封禁&&小虎鲨觉得你的文件有问题，警告1次，3次封禁&&adm=ban=300&&adm=warn=1&&del=x=0、y=15"
}

name_rule_print(){
    echo "/add@WuMingv2Bot name=(?i:${nickname}|${b_keyword1})===可疑昵称，警告1次，3次封禁&&小虎鲨不喜欢你的名字，警告1次，3次封禁&&adm=ban=300&&adm=warn=1&&del=x=0、y=15"
}

re_print(){
    #检查是否已被输出
    if [ "${re_printed[$1]}" != "1" ] ;then
        re_printed[$1]=1
        case "$1" in
           1)
                #默认输出
                echo -e "\033[35madregex: 文本消息规则\033[0m"
                text_rule_print
                ;;
           2)
                #文件
                echo -e "\033[35madregex: 文件规则\033[0m"
                file_rule_print
                ;;
           4)
                #昵称
                echo -e "\033[35madregex: 昵称规则\033[0m"
                name_rule_print
                ;;
           8)
                #昵称
                echo -e "\033[35madregex: 昵称规则\033[0m"
                name_rule_print
                ;;
           win)
                #合并(拷贝至Windows剪贴板)
                echo -e "\033[35madregex: 文本消息规则 For Windows\033[0m"
                text_rule_print | clip.exe
                echo "已自动拷贝至剪贴板"
                ;;
           *)
                #
                ;;
        esac
    fi

}

# 输出帮助
help_print(){
    echo "adregx: help\n输入 1 获取文件后缀规则\n输入 2 获取单关键词规则\n输入 4 获取双关键词规则\n输入 8 获取昵称规则\n输入 0 或什么都不输入 获取合并规则和昵称规则\n同时获取多条规则，请将以上参数相加或者使用空格隔开"
}

# 输出错误
err_print(){
    echo -e "\033[37;41madregex: invalid parameter value \"$1\"\033[0m"
    help_print
}

# 输出再见
goodbye_print(){
    echo -e "\033[92madregex: 已为您生成 ${#re_printed[@]} 条规则，感谢使用\033[0m"
}


# 读取，切割参数
parameter_read(){
    #初始化输出记录
    re_printed=()
    #无参数，输出默认
    if [ $# -eq 0 ] ;then parameter_read 0; fi
    #依次读取参数，并判断是否全部输出过
    while [ "${#re_printed[@]}" -lt 5 ] && [[ $# -ge 1 ]] ;do
        key="$1"
        case $key in
            0) re_print 4; re_print 2; re_print 1;;
            [1-9]) ;& [1-9][0-9])
                factor=16 # 2^4
                if [ "$key" -ge "$factor" ]; then
                    error="true"
                    break
                else
                    while [ "$factor" -gt 1 ]; do
                        factor=$((factor/2))
                        while [ "$key" -ge "$factor" ] ;do
                            let key-=$factor
                            re_print $factor
                        done
                    done
                fi
                ;;
            *help*)
                help_print
                break
                ;;
            win)
                re_print win
                ;;
            *)
                error="true"
                break
                ;;
        esac
        shift
    done
}

# 读取传入的全部参数
parameter_read $@

# 检查参数
while [ "$error" == "true" ]; do
    err_print $key
    error="false"
    echo -n "请重新输入参数，或输入exit退出："
    if read -t 60; then
        if [ "$REPLY" == "exit" ]; then
            exit 0
        else
            parameter_read $REPLY
        fi
    else
        echo "输入超时或被取消，输出默认规则"
        parameter_read
    fi
done

goodbye_print
