#!/system/bin/sh
#
# ${b_keyword1} ${b_keyword2} ${s_keyword} ${file_suffix}
#
#双关键词规则 两个关键词同时出现生效
#双关键词1 以商品名为主
b_keyword1='广告|服务器|cdn|阿里云|腾讯云|高防|vps|独服|杜甫|平台|搭建|定制|引流|吸粉|增粉|加粉|关注|点赞|评论|水军|活跃|wz粉|非小号|买号|卖号|微信号|企业微信|QQ号|公众号|陌陌号|电商|电销|股民|资源|数据|小群|博彩|亚博|棋牌|bc|菠菜|狗推|人事|兼职|招聘|招募|招代理|暗网|黑产|灰产|支付|件套|肆件套|黑卡|银行卡|对公|账户|公户|个户|私户|代收|代付|代发|洗钱|漂白|资金|转账|usdt|套现|换汇|贷款|网贷|送货|跑分|卡商|卡王|查人|查询|定位|开房|查档|社工|苹果签名|iOS签名|企业签名|莆田|手表|高仿|水鬼|租房|房源|一对一|1对1'

#双关键词2 以对商品的修饰为主
b_keyword2='出|售|卖|收|需要|咨询|合作|点我|加我|看我|点头像|dd|滴滴|联系|私|v信|加v|\+v|vx|加q|\+q|真人|真实|实名|认证|筛选|解封|担保|专业|精准|实力|高端|专供|供应|大量|批发|现货|现🔥|货源|直出|安排|菲|全新|原装|一手|二手|团队|工作室'

#单关键词规则 每条都是单独生效
s_keyword='^(dd|滴滴|签到)$|小哥哥.*在(不在|吗)|需要.*联系|v信|薇信|^加v'

#文件后缀规则 删除可执行文件
file_suffix='exe|cmd|com|bat|scr|cpl|vbs'

#输出规则
re_print(){
    case "$1" in
       1)
            #文件
            echo -e "\033[7;32madregex: File Suffix Rule 文件后缀规则\033[0m"
            echo "(?i:\.(${file_suffix})\$)===delete"
            ;;
       2)
            #单
            echo -e "\033[7;32madregex: Independent Rule 单关键词规则\033[0m"
            echo "(?i:(${s_keyword}))===delete"
            ;;
       4)
            #双
            echo -e "\033[7;32madregex: Joint Rule 双关键词规则\033[0m"
            echo "(?i:(${b_keyword1}).*(${b_keyword2})|(${b_keyword2}).*(${b_keyword1}))===delete"
            ;;
       8);&
       *)
            #合并
            echo -e "\033[7;32madregex:All in One Rule 合并规则\033[0m"
            echo "(?i:(${b_keyword1}).*(${b_keyword2})|(${b_keyword2}).*(${b_keyword1})|(${s_keyword})|\.(${file_suffix})\$)===delete"
            ;;
    esac

}

help_print(){
    echo "adregx: help\n输入 1 获取文件后缀规则\n输入 2 获取单关键词规则\n输入 4 获取双关键词规则\n输入 8 或什么都不输入 获取合并规则\n同时获取多条规则，请将以上参数相加或者使用空格隔开"
}

err_print(){
    echo -e "\033[7;32madregex: invalid parameter value '$1'\033[0m"
}


#判断，分离，切割参数
parameter_read(){
    if [ $# -eq 0 ] ;then
        re_print
    fi
    while [[ $# -ge 1 ]] ;do
        key="$1"
        case $key in
            0) re_print;;
            [1-9]);&
            [1-9][0-9])
                factor=16 # 2^4
                if [ "$key" -ge "$factor" ] ;then
                    err_print $key
                    help_print
                    error="true"
                    break
                else
                    while [ "$factor" -ge 2 ] ;do
                        factor=$((factor/2))
                        while [ "$key" -ge "$factor" ] ;do
                            let key-=$factor
                            re_print $factor
                        done
                    done
                fi
                ;;
            *help*)
                help_print
                break
                ;;
            *)
                err_print $key
                help_print
                error="true"
                break
                ;;
        esac
        shift
    done
}


parameter_read $@

#请求重新输入参数
while [ "$error" == "true" ] ;do
    error="false"
    echo -n "请重新输入参数，或输入exit退出："
    if read -t 60 ;then
        if [ "$REPLY" == "exit" ] ;then
            exit 0
        else
            parameter_read $REPLY
        fi
    else
        echo "输入超时或被取消，输出默认规则"
        re_print
    fi
done
