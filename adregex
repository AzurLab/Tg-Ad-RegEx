#!/bin/bash
##############################
# Telegram 去广告正则生成脚本 https://github.com/AzurLab/Tg-Ad-RegEx
# 一键命令 wget https://raw.githubusercontent.com/AzurLab/Tg-Ad-RegEx/main/adregex -O adregex && chmod +x adregex && ./adregex
# 当前适配 無名 v2 机器人 @WuMingv2Bot (我们永远怀念鲁小迅)
##############################
# 规则备忘录
# 1.机器人推广链接:
# /add@WuMingv2Bot (?i:bot\?start)===推广链接，警告1次，3次封禁&&小虎鲨不喜欢你发的链接，警告1次，3次封禁&&adm=ban=300&&adm=warn=1&&del=x=0、y=15
##############################
# 以下为广告关键词参数
# ${dependentPatternsPart1} ${dependentPatternsPart2} ${independentPatterns} ${suffixPatterns} ${nicknamePatterns} ${fileNamePatterns}
##############################

# 双关键词1 以广告主体为主

dependentPatternsPart1="\
业务|服务器|cdn|阿里云|腾讯云|高防|vps|独服|杜甫|平台|搭建|定制|\
推广|引流|拉[人群裙]|[群裙]发|小群|[吸增加]粉|关注|点赞|评论|水军|活跃|(wz|僵尸|精准)粉|\
(批量小|非小|[买卖]|微信|QQ|支付宝|钉钉|公众|陌陌|探探|红[书薯]|抖音|soul|灵魂)号|企业微信|电[商销]|\
股民|博彩|菠菜|亚博|棋牌|狗推|人事|兼职|招([人聘募]|代理)|\
[黑灰]产|件套|(黑|银行|信用)卡|对公|[账公个私开]户|卡[商王]|假钞|\
代[收付发]|洗[钱米]|漂白|资金|转账|usdt|[回收出]u|套现|换汇|贷款|网贷|送货|跑分|\
社工|数据库|查[询人车房户档]|开房|定位|监听|人[鬼轨]|\
(苹果|iOS|企业)签名|火种|蓝标|注册|\
莆田|手表|高仿|[一1][比对][一1]|水鬼|\
[赚搞][钱米]|租房|房源|\
暗网|共济会|军火|偷渡|暗杀|走私|毒品"

# 昵称规则 不便放入关键词中的高频词汇单独列出，不会有正常人名字里面有这些吧

nicknamePatterns="\
^(在?菲)|^(1+|小?仙女)\$|\
头像|资料|精准|\
水路|往返|特区|\
共富|国际|娱乐|车队|哈希|\
免费|翻墙|梯子|中文|电报|tg|telegram|\
广告"

# 双关键词2 以对广告主体的修饰为主

dependentPatternsPart2="\
出(?![现来去了门汗生太发口声戏版油道声处国场品])|售|卖|收|\
详[情询]|面交|需要|咨询|合作|[点加看找]我|点头像|dd|滴滴|联系|\
(?<![公隐])私(?![人服])|[v薇]信|[加\+][vq薇]|\
真[人实]|实名|认证|筛选|解封|担保|专[业供]|精准|实力|高端|正规|\
全球|供应|大量|批发|[现有][货🔥]|货源|直出|安排|\
(?<![这那])个人|团队|工作室|\
[卡咔]接|[无免]押|押金|点位|[0-9]点|高价|免费(测试|试用)|出水|每日更新|\
全新|原装|[一二三]手"

# 独立规则 独立生效

independentPatterns="\
^(dd|滴滴|签到)\$|小哥哥.*在(不在|吗)|需要.*联系|[v薇]信|^加v|水路.*往返"


# 文件后缀

suffixPatterns="exe|cmd|com|bat|scr|cpl|vbs|cab|lzh|uue|(7|b|x)?z[0-9]?"

# 文件名 UC震惊部自叹不如

fileNamePatterns="\
诈骗|菲律宾|柬埔寨|金边|缅甸|老挝|越南|印度?尼西?亚?|\
视 *频|免 *费|下 *载|跳 *转|点 *击|打 *开|观 *看|片 *源|流畅|精 *品|进 *群|\
啪|土 *豪|无 *套|内 *射|肛 *交|灌 *肠|鲍 *鱼|尤 *物|母 *狗|骚|嫩|SM|\
[幼呦] *童|母 *子|人 *兽|学 *生|\
监控|记录|拍下|[全过]程|经过|详情|警方|开枪|击毙|案件|\
残忍|虐待|血腥|曝光|流出|\
[男女]子|身份|身亡|死者"

##############################
# 以下为参数及函数
##############################

# 多彩输出参数
colorful="true"

# 输出函数
aprint(){
    printColor="0"
    case "$1" in
    textHint)
        printColor="35"
        printText="Adregex 文本消息规则:\n"
    ;;
    text)
        printText="/add@WuMingv2Bot (?i:(${dependentPatternsPart1}).*(${dependentPatternsPart2})|(${dependentPatternsPart2}).*(${dependentPatternsPart1})|(${independentPatterns}))===疑似广告，已删除，如误删请联系 @Durovs_Legacy。&&小虎鲨疯了&&小虎鲨不喜欢你&&已击毙广告&&你再想想&&del=x=0、y=15\n"
    ;;
    nameHint)
        printColor="35"
        printText="Adregex 昵称规则:\n"
    ;;
    name)
        printText="/add@WuMingv2Bot name=(?i:${nicknamePatterns}|${dependentPatternsPart1})===可疑昵称，警告1次&&小虎鲨不喜欢你的名字，警告1次&&adm=ban=300&&adm=warn=1&&del=x=0、y=15\n"
    ;;
    fileHint)
        printColor="35"
        printText="Adregex 文件规则:\n"
    ;;
    file)
        printText="/add@WuMingv2Bot fname=(?i:${fileNamePatterns}|\.(${suffixPatterns})\$)===可疑文件，警告1次&&小虎鲨觉得你的文件有问题，警告1次&&adm=ban=300&&adm=warn=1&&del=x=0、y=15\n"
    ;;
    # 输出Windows规则并拷贝
    winHint)
        printColor="35"
        printText="Adregex 文本消息规则 For Windows 已自动拷贝至剪贴板"
    ;;
    win)
        colorful="false"
        aprint text
    ;;
    # 输出帮助
    help)
        printText="Adregex 帮助:\n输入 1 获取文本消息规则\n输入 2 获取昵称规则\n输入 4 获取文件规则\n输入 8 获取昵称规则\n输入 0 或什么都不输入 获取全部规则\n同时获取多条规则，请将以上参数相加或者使用空格隔开\n"
    ;;
    # 输出错误
    error)
        printColor="37;41"
        printText="Adregex: invalid parameter value \"$2\""
        aprint help
    ;;
    askParameter)
        printText="请重新输入参数，或输入exit退出："
    ;;
    timeout)
        printText="输入超时或被取消，输出默认规则"
    ;;
    # 输出再见
    goodbye)
        printColor="92"
        printText="Adregex 已为您生成 ${#ruleGenerated[@]} 条规则，感谢使用"
    ;;
    # 其他情况
    *)
        printText="Invalid input!\n"
    ;;
    esac
    if [ "${printText}" != "" ]; then 
        if [ "$colorful" == "true" ]; then
            echo -e "\033[${printColor}m${printText}\033[0m"
        else
            echo -e "${printText}"
        fi
    printText=""
    fi

}

# 规则生成
ruleGenerate(){
    #检查是否已被输出
    if [ "${ruleGenerated[$1]}" != "1" ] ;then
        ruleGenerated[$1]=1
        case "$1" in
            1)
                # 文本消息
                aprint textHint
                aprint text;;
            2)
                # 昵称
                aprint nameHint
                aprint name;;
            4)
                # 文件
                aprint fileHint
                aprint file;;
            8)
                # 备用
                ;;
            win)
                # 拷贝至Windows剪贴板
                aprint winHint
                aprint win | clip.exe;;
            *)
                # 备用
                ;;
        esac
    fi

}

# 读取，切割参数
readParameter(){
    #初始化输出记录
    ruleGenerated=()
    #无参数，输出默认
    if [ $# -eq 0 ] ;then readParameter 0; fi
    #依次读取参数，并判断是否全部输出过
    while [ "${#ruleGenerated[@]}" -lt 5 ] && [[ $# -ge 1 ]] ;do
        key="$1"
        case $key in
            0) ruleGenerate 1; ruleGenerate 2; ruleGenerate 4;;
            [1-9]) ;& [1-9][0-9])
                factor=16 # 2^4
                if [ "$key" -ge "$factor" ]; then
                    error="true"
                    break
                else
                    while [ "$factor" -gt 1 ]; do
                        factor=$((factor/2))
                        while [ "$key" -ge "$factor" ] ;do
                            let key-=$factor
                            ruleGenerate $factor
                        done
                    done
                fi
            ;;
            *help*)
                aprint help
                break
            ;;
            win)
                ruleGenerate win
            ;;
            txt)
                colorful="false"
                readParameter 0
            ;;
            *)
                error="true"
                break
            ;;
        esac
        shift
    done
}

checkParameter(){
    while [ "$error" == "true" ]; do
        aprint error $key
        error="false"
        aprint askParameter
        if read -t 60; then
            if [ "$REPLY" == "exit" ]; then
                exit 0
            else
                readParameter $REPLY
            fi
        else
            aprint timeout
            readParameter
        fi
    done
}

##############################
# 以下为主程序
##############################

# 读取传入的全部参数
readParameter $@
# 检查参数
checkParameter
# 再见
aprint goodbye
